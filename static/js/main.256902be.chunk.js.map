{"version":3,"sources":["components/layout/Searchbar.js","components/layout/ModeField.js","components/layout/Navbar.js","components/layout/ContentCard.js","components/layout/Content.js","App.js","serviceWorker.js","index.js"],"names":["Searchbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","state","mode","bind","assertThisInitialized","classes","props","react_default","a","createElement","className","search","searchIcon","Search_default","InputBase_default","placeholder","root","inputRoot","input","inputInput","React","Component","withStyles","theme","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","unit","height","pointerEvents","display","alignItems","justifyContent","color","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","ModeField","Select_default","onChange","FilledInput_default","id","MenuItem_default","SearchAppBar","AppBar_default","Toolbar_default","InputLabel_default","htmlFor","layout_ModeField","grow","Typography_default","title","variant","noWrap","layout_Searchbar","flexGrow","menuButton","marginRight","justify","ContentCard","Card_default","card","CardContent_default","gutterBottom","component","pos","CardActions_default","Button_default","size","minWidth","maxWidth","fontSize","marginBottom","cardList","layout_ContentCard","padding","App","Navbar","Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.256902be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '80%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nclass Searchbar extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            mode: 'None'\n        } \n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n\n    render() {\n        const { classes } = this.props;\n\n    \n        return (\n            \n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                    <SearchIcon />\n                    </div>\n                    <InputBase\n                    placeholder=\"Searchâ€¦\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    />\n                </div>\n        );\n    }\n}\n\nSearchbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Searchbar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nclass ModeField extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            mode: 'None'\n        } \n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n\n    render() {\n        return (\n                <Select\n                    value={this.state.mode}\n                    onChange={this.handleChange}\n                    input={<FilledInput name=\"mode\" id=\"filled-mode-simple\" />}\n                >\n                    <MenuItem value=\"\">\n                    <em>Any Language</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Python</MenuItem>\n                    <MenuItem value={20}>MATLAB</MenuItem>\n                    <MenuItem value={30}>C</MenuItem>\n                </Select>\n        );\n    }\n}\n\nModeField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default ModeField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Searchbar from './Searchbar';\nimport Modefield from './ModeField';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    justify: 'center',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nclass SearchAppBar extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            mode: 'None'\n        } \n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n\n    render() {\n        const { classes } = this.props;\n\n    \n        return (\n            <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                <InputLabel htmlFor=\"filled-mode-simple\">Mode: </InputLabel>\n                \n                {/* Modefield Component */}\n                <Modefield/>\n                \n                <div className={classes.grow} />\n                <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                    Algorithm Look Up\n                </Typography>\n                <div className={classes.grow} />\n                \n                {/* Searchbar Component */}\n                <Searchbar/>\n                \n                </Toolbar>\n            </AppBar>\n            </div>\n        );\n    }\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    card: {\n      minWidth: 275,\n      maxWidth: 300,\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    }\n});\n\n\nclass ContentCard extends React.Component {\n\n    \n    constructor(){\n        super()\n        this.state = {\n           //Empty stateless\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className='content-card'>\n               <Card className={classes.card}>\n                   <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        LibraryName\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        function_name()\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        Language\n                    </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            A small description of the function. \n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\">Read More</Button>\n                    </CardActions>\n               </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(ContentCard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContentCard from './ContentCard';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    cardList: {\n        padding: \"20px\",\n    }\n  });\n\nclass ModeField extends React.Component {\n    \n    /*\n    constructor(){\n        super()\n        this.state = {\n            mode: 'None'\n        }\n    }\n    */\n   \n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.cardList}>\n                \n                <ContentCard/>\n                \n            </div>\n        );\n    }\n}\n\nModeField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ModeField);","import React from 'react';\nimport './App.css';\nimport NavBar from './components/layout/Navbar';\nimport Content from './components/layout/Content';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <NavBar/>\n        <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}